{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-10-42-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/en/examples/animation/path","result":{"data":{"site":{"siteMetadata":{"title":"G","githubUrl":"https://github.com/antvis/g","examples":[{"slug":"shape","icon":null,"title":{"zh":"基本图形","en":"Shape"}},{"slug":"event","icon":null,"title":{"zh":"事件","en":"Event"}},{"slug":"animation","icon":null,"title":{"zh":"动画","en":"Animation"}}],"playground":null},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"html":"<ul>\n<li>Monitoring events on shape directly.</li>\n</ul>","fields":{"slug":"/en/examples/event/shape"},"frontmatter":{"title":"Shape Event","order":0,"icon":null},"parent":{"relativePath":"event/shape/index.en.md"}}},{"node":{"html":"<ul>\n<li>直接在图形 shape 上监听事件。</li>\n</ul>","fields":{"slug":"/zh/examples/event/shape"},"frontmatter":{"title":"图形事件","order":0,"icon":null},"parent":{"relativePath":"event/shape/index.zh.md"}}},{"node":{"html":"<ul>\n<li>绘制圆形。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/circle"},"frontmatter":{"title":"Circle 圆形","order":0,"icon":null},"parent":{"relativePath":"shape/circle/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Draw circle.</li>\n</ul>","fields":{"slug":"/en/examples/shape/circle"},"frontmatter":{"title":"Circle","order":0,"icon":null},"parent":{"relativePath":"shape/circle/index.en.md"}}},{"node":{"html":"<ul>\n<li>Add animation by setting final status of attributes' value.</li>\n</ul>","fields":{"slug":"/en/examples/animation/attribute"},"frontmatter":{"title":"Attribute animation","order":0,"icon":null},"parent":{"relativePath":"animation/attribute/index.en.md"}}},{"node":{"html":"<ul>\n<li>通过设置绘图属性值的终态生成动画。</li>\n</ul>","fields":{"slug":"/zh/examples/animation/attribute"},"frontmatter":{"title":"属性动画","order":0,"icon":null},"parent":{"relativePath":"animation/attribute/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Support event bubble and event bubbles from child to its parent step by step.</li>\n</ul>","fields":{"slug":"/en/examples/event/bubble"},"frontmatter":{"title":"Event bubble","order":1,"icon":null},"parent":{"relativePath":"event/bubble/index.en.md"}}},{"node":{"html":"<ul>\n<li>支持事件冒泡，事件会从下层元素冒泡到上层元素。</li>\n</ul>","fields":{"slug":"/zh/examples/event/bubble"},"frontmatter":{"title":"事件冒泡","order":1,"icon":null},"parent":{"relativePath":"event/bubble/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Draw ellipse.</li>\n</ul>","fields":{"slug":"/en/examples/shape/ellipse"},"frontmatter":{"title":"Ellipse","order":1,"icon":null},"parent":{"relativePath":"shape/ellipse/index.en.md"}}},{"node":{"html":"<ul>\n<li>绘制椭圆。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/ellipse"},"frontmatter":{"title":"Ellipse 椭圆","order":1,"icon":null},"parent":{"relativePath":"shape/ellipse/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Customize frame animation by setting frame function.</li>\n</ul>","fields":{"slug":"/en/examples/animation/onFrame"},"frontmatter":{"title":"Customize frame animation","order":1,"icon":null},"parent":{"relativePath":"animation/onFrame/index.en.md"}}},{"node":{"html":"<ul>\n<li>通过设置帧动画函数自定义帧动画。</li>\n</ul>","fields":{"slug":"/zh/examples/animation/onFrame"},"frontmatter":{"title":"自定义帧动画","order":1,"icon":null},"parent":{"relativePath":"animation/onFrame/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Draw rectangle.</li>\n</ul>","fields":{"slug":"/en/examples/shape/rect"},"frontmatter":{"title":"Rect","order":2,"icon":null},"parent":{"relativePath":"shape/rect/index.en.md"}}},{"node":{"html":"<ul>\n<li>绘制矩形。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/rect"},"frontmatter":{"title":"Rect 矩形","order":2,"icon":null},"parent":{"relativePath":"shape/rect/index.zh.md"}}},{"node":{"html":"<ul>\n<li>支持事件委托（又称事件代理）。</li>\n</ul>","fields":{"slug":"/zh/examples/event/delegate"},"frontmatter":{"title":"事件委托","order":2,"icon":null},"parent":{"relativePath":"event/delegate/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Support event delegation.</li>\n</ul>","fields":{"slug":"/en/examples/event/delegate"},"frontmatter":{"title":"Event delegation","order":2,"icon":null},"parent":{"relativePath":"event/delegate/index.en.md"}}},{"node":{"html":"<ul>\n<li>Achieve path animation easily by setting frame function where update the position of shape.</li>\n</ul>","fields":{"slug":"/en/examples/animation/path"},"frontmatter":{"title":"Path animation","order":2,"icon":null},"parent":{"relativePath":"animation/path/index.en.md"}}},{"node":{"html":"<ul>\n<li>通过自定义帧动画以及实时设置元素的位置，可以实现沿路径运动的轨迹动画。</li>\n</ul>","fields":{"slug":"/zh/examples/animation/path"},"frontmatter":{"title":"轨迹动画","order":2,"icon":null},"parent":{"relativePath":"animation/path/index.zh.md"}}},{"node":{"html":"<ul>\n<li>绘制直线。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/line"},"frontmatter":{"title":"Line 直线","order":3,"icon":null},"parent":{"relativePath":"shape/line/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Draw line.</li>\n</ul>","fields":{"slug":"/en/examples/shape/line"},"frontmatter":{"title":"Line","order":3,"icon":null},"parent":{"relativePath":"shape/line/index.en.md"}}},{"node":{"html":"<ul>\n<li>Draw polyline.</li>\n</ul>","fields":{"slug":"/en/examples/shape/polyline"},"frontmatter":{"title":"Polyline","order":4,"icon":null},"parent":{"relativePath":"shape/polyline/index.en.md"}}},{"node":{"html":"<ul>\n<li>绘制折线。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/polyline"},"frontmatter":{"title":"Polyline 折线","order":4,"icon":null},"parent":{"relativePath":"shape/polyline/index.zh.md"}}},{"node":{"html":"<ul>\n<li>绘制多边形。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/polygon"},"frontmatter":{"title":"Polygon 多边形","order":5,"icon":null},"parent":{"relativePath":"shape/polygon/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Draw polygon.</li>\n</ul>","fields":{"slug":"/en/examples/shape/polygon"},"frontmatter":{"title":"Polygon","order":5,"icon":null},"parent":{"relativePath":"shape/polygon/index.en.md"}}},{"node":{"html":"<ul>\n<li>Draw path.</li>\n</ul>","fields":{"slug":"/en/examples/shape/path"},"frontmatter":{"title":"Path","order":6,"icon":null},"parent":{"relativePath":"shape/path/index.en.md"}}},{"node":{"html":"<ul>\n<li>绘制路径。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/path"},"frontmatter":{"title":"Path 路径","order":6,"icon":null},"parent":{"relativePath":"shape/path/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Draw marker.</li>\n</ul>","fields":{"slug":"/en/examples/shape/marker"},"frontmatter":{"title":"Marker","order":7,"icon":null},"parent":{"relativePath":"shape/marker/index.en.md"}}},{"node":{"html":"<ul>\n<li>绘制几何图形。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/marker"},"frontmatter":{"title":"Marker 几何图形","order":7,"icon":null},"parent":{"relativePath":"shape/marker/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Draw image.</li>\n</ul>","fields":{"slug":"/en/examples/shape/image"},"frontmatter":{"title":"Image","order":8,"icon":null},"parent":{"relativePath":"shape/image/index.en.md"}}},{"node":{"html":"<ul>\n<li>绘制图片。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/image"},"frontmatter":{"title":"Image 图片","order":8,"icon":null},"parent":{"relativePath":"shape/image/index.zh.md"}}},{"node":{"html":"<ul>\n<li>绘制文本。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/text"},"frontmatter":{"title":"Text 文本","order":9,"icon":null},"parent":{"relativePath":"shape/text/index.zh.md"}}},{"node":{"html":"<ul>\n<li>Draw text.</li>\n</ul>","fields":{"slug":"/en/examples/shape/text"},"frontmatter":{"title":"Text","order":9,"icon":null},"parent":{"relativePath":"shape/text/index.en.md"}}},{"node":{"html":"<ul>\n<li>Draw Dom element, only for SVG version.</li>\n</ul>","fields":{"slug":"/en/examples/shape/dom"},"frontmatter":{"title":"Dom (SVG)","order":10,"icon":null},"parent":{"relativePath":"shape/dom/index.en.md"}}},{"node":{"html":"<ul>\n<li>绘制 Dom 节点，只有 SVG 版本支持。</li>\n</ul>","fields":{"slug":"/zh/examples/shape/dom"},"frontmatter":{"title":"Dom 节点 (SVG)","order":10,"icon":null},"parent":{"relativePath":"shape/dom/index.zh.md"}}}]}},"pageContext":{"exampleSections":{"examples":[{"relativePath":"animation/path/demo/along-line.js","absolutePath":"/Users/dengfuping/Documents/GitHub/AntVis/g/examples/animation/path/demo/along-line.js","order":0,"filename":"along-line.js","title":{"zh":"直线轨迹动画","en":"Animation along line"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*FINdTb9T1SQAAAAAAAAAAABkARQnAQ","source":"import { Canvas } from '@antv/g-canvas';\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n});\n\nconst line = canvas.addShape('line', {\n  attrs: {\n    x1: 100,\n    y1: 100,\n    x2: 400,\n    y2: 300,\n    lineWidth: 4,\n    stroke: '#1890FF',\n  },\n});\n\nconst circle = canvas.addShape('circle', {\n  attrs: {\n    x: 100,\n    y: 300,\n    r: 20,\n    fill: '#F04864',\n  },\n});\n\ncircle.animate((ratio) => line.getPoint(ratio), {\n  duration: 1000,\n  repeat: true,\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-canvas\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-canvas\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gCanvas);\n    global.alongLine = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gCanvas) {\n  \"use strict\";\n\n  var canvas = new _gCanvas.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500\n  });\n  var line = canvas.addShape('line', {\n    attrs: {\n      x1: 100,\n      y1: 100,\n      x2: 400,\n      y2: 300,\n      lineWidth: 4,\n      stroke: '#1890FF'\n    }\n  });\n  var circle = canvas.addShape('circle', {\n    attrs: {\n      x: 100,\n      y: 300,\n      r: 20,\n      fill: '#F04864'\n    }\n  });\n  circle.animate(function (ratio) {\n    return line.getPoint(ratio);\n  }, {\n    duration: 1000,\n    repeat: true\n  });\n});"},{"relativePath":"animation/path/demo/along-circle.js","absolutePath":"/Users/dengfuping/Documents/GitHub/AntVis/g/examples/animation/path/demo/along-circle.js","order":1,"filename":"along-circle.js","title":{"zh":"圆轨迹动画","en":"Animation along circle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*iNImR4naeOkAAAAAAAAAAABkARQnAQ","source":"import { Canvas } from '@antv/g-canvas';\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n});\n\ncanvas.addShape('circle', {\n  attrs: {\n    x: 300,\n    y: 200,\n    r: 100,\n    lineWidth: 4,\n    stroke: '#1890FF',\n  },\n});\n\nconst circle = canvas.addShape('circle', {\n  attrs: {\n    x: 100,\n    y: 200,\n    r: 20,\n    fill: '#F04864',\n  },\n});\n\ncircle.animate(onFrame, {\n  duration: 2000,\n  repeat: true,\n});\n\nfunction onFrame(ratio) {\n  return {\n    x: 300 + 100 * Math.cos(ratio * Math.PI * 2),\n    y: 200 + 100 * Math.sin(ratio * Math.PI * 2),\n  };\n}\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-canvas\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-canvas\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gCanvas);\n    global.alongCircle = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gCanvas) {\n  \"use strict\";\n\n  var canvas = new _gCanvas.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500\n  });\n  canvas.addShape('circle', {\n    attrs: {\n      x: 300,\n      y: 200,\n      r: 100,\n      lineWidth: 4,\n      stroke: '#1890FF'\n    }\n  });\n  var circle = canvas.addShape('circle', {\n    attrs: {\n      x: 100,\n      y: 200,\n      r: 20,\n      fill: '#F04864'\n    }\n  });\n  circle.animate(onFrame, {\n    duration: 2000,\n    repeat: true\n  });\n\n  function onFrame(ratio) {\n    return {\n      x: 300 + 100 * Math.cos(ratio * Math.PI * 2),\n      y: 200 + 100 * Math.sin(ratio * Math.PI * 2)\n    };\n  }\n});"},{"relativePath":"animation/path/demo/along-rect.js","absolutePath":"/Users/dengfuping/Documents/GitHub/AntVis/g/examples/animation/path/demo/along-rect.js","order":2,"filename":"along-rect.js","title":{"zh":"矩形轨迹动画","en":"Animation along circle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*Y9deQI1bTa0AAAAAAAAAAABkARQnAQ","source":"import { Canvas } from '@antv/g-canvas';\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n});\n\ncanvas.addShape('rect', {\n  attrs: {\n    x: 200,\n    y: 100,\n    width: 300,\n    height: 200,\n    lineWidth: 4,\n    stroke: '#1890FF',\n  },\n});\n\nconst circle = canvas.addShape('circle', {\n  attrs: {\n    x: 200,\n    y: 200,\n    r: 20,\n    fill: '#F04864',\n  },\n});\n\ncircle.animate(onFrame, {\n  duration: 4000,\n  repeat: true,\n});\n\nfunction onFrame(ratio) {\n  const length = ratio * 1000;\n  let x = 200;\n  let y = 100;\n  if (length >= 0 && length <= 300) {\n    x = x + length;\n    y = 100;\n  } else if (length > 300 && length < 500) {\n    x = 500;\n    y = y + length - 300;\n  } else if (length >= 500 && length <= 800) {\n    x = x + 800 - length;\n    y = 300;\n  } else if (length > 800 && length < 1000) {\n    x = 200;\n    y = y + 1000 - length;\n  }\n  return {\n    x,\n    y,\n  };\n}\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-canvas\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-canvas\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gCanvas);\n    global.alongRect = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gCanvas) {\n  \"use strict\";\n\n  var canvas = new _gCanvas.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500\n  });\n  canvas.addShape('rect', {\n    attrs: {\n      x: 200,\n      y: 100,\n      width: 300,\n      height: 200,\n      lineWidth: 4,\n      stroke: '#1890FF'\n    }\n  });\n  var circle = canvas.addShape('circle', {\n    attrs: {\n      x: 200,\n      y: 200,\n      r: 20,\n      fill: '#F04864'\n    }\n  });\n  circle.animate(onFrame, {\n    duration: 4000,\n    repeat: true\n  });\n\n  function onFrame(ratio) {\n    var length = ratio * 1000;\n    var x = 200;\n    var y = 100;\n\n    if (length >= 0 && length <= 300) {\n      x = x + length;\n      y = 100;\n    } else if (length > 300 && length < 500) {\n      x = 500;\n      y = y + length - 300;\n    } else if (length >= 500 && length <= 800) {\n      x = x + 800 - length;\n      y = 300;\n    } else if (length > 800 && length < 1000) {\n      x = 200;\n      y = y + 1000 - length;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n});"},{"relativePath":"animation/path/demo/along-polyline.js","absolutePath":"/Users/dengfuping/Documents/GitHub/AntVis/g/examples/animation/path/demo/along-polyline.js","order":3,"filename":"along-polyline.js","title":{"zh":"折线轨迹动画","en":"Animation along polyline"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*uihPTov5UkQAAAAAAAAAAABkARQnAQ","source":"import { Canvas } from '@antv/g-canvas';\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n});\n\nconst polyline = canvas.addShape('polyline', {\n  attrs: {\n    points: [\n      [50, 50],\n      [100, 50],\n      [100, 100],\n      [150, 100],\n      [150, 150],\n      [200, 150],\n      [200, 200],\n      [250, 200],\n      [250, 250],\n      [300, 250],\n      [300, 300],\n      [350, 300],\n      [350, 350],\n      [400, 350],\n      [400, 400],\n      [450, 400],\n    ],\n    lineWidth: 4,\n    stroke: '#1890FF',\n  },\n});\n\nconst circle = canvas.addShape('circle', {\n  attrs: {\n    x: 100,\n    y: 300,\n    r: 20,\n    fill: '#F04864',\n  },\n});\n\ncircle.animate((ratio) => polyline.getPoint(ratio), {\n  duration: 5000,\n  repeat: true,\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-canvas\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-canvas\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gCanvas);\n    global.alongPolyline = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gCanvas) {\n  \"use strict\";\n\n  var canvas = new _gCanvas.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500\n  });\n  var polyline = canvas.addShape('polyline', {\n    attrs: {\n      points: [[50, 50], [100, 50], [100, 100], [150, 100], [150, 150], [200, 150], [200, 200], [250, 200], [250, 250], [300, 250], [300, 300], [350, 300], [350, 350], [400, 350], [400, 400], [450, 400]],\n      lineWidth: 4,\n      stroke: '#1890FF'\n    }\n  });\n  var circle = canvas.addShape('circle', {\n    attrs: {\n      x: 100,\n      y: 300,\n      r: 20,\n      fill: '#F04864'\n    }\n  });\n  circle.animate(function (ratio) {\n    return polyline.getPoint(ratio);\n  }, {\n    duration: 5000,\n    repeat: true\n  });\n});"},{"relativePath":"animation/path/demo/along-path.js","absolutePath":"/Users/dengfuping/Documents/GitHub/AntVis/g/examples/animation/path/demo/along-path.js","order":4,"filename":"along-path.js","title":{"zh":"自定义轨迹动画 (路径动画)","en":"Animation along path"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*k17iQYsgKyMAAAAAAAAAAABkARQnAQ","source":"import { Canvas } from '@antv/g-canvas';\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n});\n\nconst path = canvas.addShape('path', {\n  attrs: {\n    path:\n      'M 100,300' +\n      'l 50,-25' +\n      'a 25,25 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a 25,50 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a 25,75 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a 25,100 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'l 0, 200,' +\n      'z',\n    lineWidth: 4,\n    stroke: '#1890FF',\n  },\n});\n\nconst circle = canvas.addShape('circle', {\n  attrs: {\n    x: 100,\n    y: 300,\n    r: 20,\n    fill: '#F04864',\n  },\n});\n\ncircle.animate((ratio) => path.getPoint(ratio), {\n  duration: 5000,\n  repeat: true,\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-canvas\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-canvas\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gCanvas);\n    global.alongPath = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gCanvas) {\n  \"use strict\";\n\n  var canvas = new _gCanvas.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500\n  });\n  var path = canvas.addShape('path', {\n    attrs: {\n      path: 'M 100,300' + 'l 50,-25' + 'a 25,25 -30 0,1 50,-25' + 'l 50,-25' + 'a 25,50 -30 0,1 50,-25' + 'l 50,-25' + 'a 25,75 -30 0,1 50,-25' + 'l 50,-25' + 'a 25,100 -30 0,1 50,-25' + 'l 50,-25' + 'l 0, 200,' + 'z',\n      lineWidth: 4,\n      stroke: '#1890FF'\n    }\n  });\n  var circle = canvas.addShape('circle', {\n    attrs: {\n      x: 100,\n      y: 300,\n      r: 20,\n      fill: '#F04864'\n    }\n  });\n  circle.animate(function (ratio) {\n    return path.getPoint(ratio);\n  }, {\n    duration: 5000,\n    repeat: true\n  });\n});"}]}}}}